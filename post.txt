- Why is Slack so awesome?
  - For non-developers: Slick user-inteface, teams and channels to keep communication separate and relevant, way faster and informal than email, tons of integrations for
    productivity(Dropbox, Box, Google Calendar, Hangouts etc), and fun to use - emojis and GIFs
  - For developers: Potential for interesting applications with their APIs and integrations:Web hooks, Slash commands and Bots

- Goal of the tutorial
  - This turorial aims to help developers get up and running with a simple node app that turns your slack channel into a custom command-line terminal. The sample app
    uses 'slack-terminalize'(disclaimer: I built it), a module that abstracts away initial processing of the messages, helping the developer to focus on command implementations instead.

- Need/Motivation for slack-terminalize
  While there're fancy hubot scripts that respond to natural language queries, a lot can be achieved with short commands and minimal keystrokes, as any linux terminal fan would agree. Simple commands also prove especially useful in a mobile device and with that motivation, I built slack-terminalize, a module with a parse-and-dispatch approach, that takes care of initial processing and tokenization of the message. Also with a simple, plugin like architecture to add custom commands, it facilitates seting up a working app in a matter of minutes.

- Why not Slash commands?
  - Slash commands(link) are one way to achieve this, but each slash command that you add counts as a separate integration(link), and with the free tier of Slack, there's a limit on the number of integrations that can be added to a team. So this project takes a different approach, of using the Real-time API(link) to listen to every message posted on the configured channels, tokenize the message to break them down to command and args.

- What would be good to know, before getting started?
  - Working knowledge of Javascript and NodeJS
  - Familiarity with Slack jargon: teams, channels, bot, integrations
  - Good pre-reads:
    - Introduction to Hubot
    - ... and other useful getting started links

- Dissecting <my-module-name>(the module I'm working on)
  - What is it.. ?
    - A node module that helps build a custom command vocabulary for your team. It might be a bit opinionated in its approach in that it requires a
      specific project structure and file names, which nonetheless is very customizable.

- Why should I use it?
  - natural lanuage interpretation vs command interface: type less, do more - good for mobile devices
  - asbtract the most basic tasks of message interpretation: clean, parse, tokenize
  - help developers focus more on declaring and defining custom commands, rather than handling the raw message

- Getting started ?
  - Add a new bot user integration, get a token
  - Clone and set up the sample app with github link
  - Project structure walkthrough.. organization of directories and files
  - Code walkthrough for the sample app
  - How to declare custom commands, defining their implementation
  - Implementing two simple commands: one that responds synchronously, and one that responds asynchronously(calls an external API, to fetch response)
  - Various configurations that can be passed to <my-module-name> to customize the bot behavior and project structure

- Bonus Stuffs
  - Adding your new bot to other channels
  - Changing how your bot looks

- Improvements.. Next in Series
  - Building custom slash commands, that enables easy distribution of commands to other teams and also makes secure communication possible. It also has support for
    ephemeral messages, which is especially useful if youâ€™re running on free tier of Slack, which has a 10,000 message limit per channel.
  - Building a Yeoman generator to generate the sample app we discussed in this article

- Links/Resources
  - Slack Bot Users - https://api.slack.com/bot-users
  - Slack APIs - https://api.slack.com/
  - Hubot - https://hubot.github.com/
  - Hubot Slack - https://github.com/slackhq/hubot-slack
  - Node Slack Client - https://github.com/slackhq/node-slack-client
  - REST vs WebSockets - https://www.pubnub.com/blog/2015-01-05-websockets-vs-rest-api-understanding-the-difference/
  - How to create and publish your first Node module - https://medium.com/@jdaudier/how-to-create-and-publish-your-first-node-js-module-444e7585b738#.apmx8akep
  - Checklist for your new Open Source JS project - https://ericdouglas.github.io/2015/09/27/checklist-for-your-new-open-source-javascript-project/